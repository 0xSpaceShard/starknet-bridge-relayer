/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StarknetGovernance,
  StarknetGovernanceInterface,
} from "../../Starknet.sol/StarknetGovernance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "acceptedGovernor",
        type: "address",
      },
    ],
    name: "LogNewGovernorAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nominatedGovernor",
        type: "address",
      },
    ],
    name: "LogNominatedGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LogNominationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "removedGovernor",
        type: "address",
      },
    ],
    name: "LogRemovedGovernor",
    type: "event",
  },
  {
    inputs: [],
    name: "starknetAcceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "starknetCancelNomination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "starknetIsGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "starknetNominateNewGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governorForRemoval",
        type: "address",
      },
    ],
    name: "starknetRemoveGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bd3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301a015901461005c57806384f921cd146100b657806391a66a26146100fa578063946be3ed1461013e578063e37fec2514610148575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610152565b60405180821515815260200191505060405180910390f35b6100f8600480360360208110156100cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610164565b005b61013c6004803603602081101561011057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610170565b005b61014661017c565b005b610150610186565b005b600061015d82610190565b9050919050565b61016d816101f4565b50565b61017981610443565b50565b610184610743565b565b61018e610864565b565b60008061019b6109b7565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16915050919050565b6101fd33610190565b61026f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f4e4c595f474f5645524e414e4345000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f474f5645524e4f525f53454c465f52454d4f564500000000000000000000000081525060200191505060405180910390fd5b600061031b6109b7565b905061032682610190565b610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e4f545f474f5645524e4f52000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd75f94825e770b8b512be8e74759e252ad00e102e38f50cce2f7c6f868a2959982604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b61044c33610190565b6104be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f4e4c595f474f5645524e414e4345000000000000000000000000000000000081525060200191505060405180910390fd5b60006104c86109b7565b9050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4241445f4144445245535300000000000000000000000000000000000000000081525060200191505060405180910390fd5b61057682610190565b156105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f414c52454144595f474f5645524e4f520000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4f544845525f43414e4449444154455f50454e44494e4700000000000000000081525060200191505060405180910390fd5b818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6166272c8d3f5f579082f2827532732f97195007983bb5b83ac12c56700b01a682604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600061074d6109b7565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610814576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4f4e4c595f43414e4449444154455f474f5645524e4f5200000000000000000081525060200191505060405180910390fd5b61081d33610a6a565b60008160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61086d33610190565b6108df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f4e4c595f474f5645524e414e4345000000000000000000000000000000000081525060200191505060405180910390fd5b60006108e96109b7565b9050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109b45760008160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7a8dc7dd7fffb43c4807438fa62729225156941e641fd877938f4edade3429f560405160405180910390a15b50565b6000806040518060400160405280601c81526020017f535441524b4e45545f312e305f474f5645524e414e43455f494e464f000000008152506040516020018082805190602001908083835b60208310610a265780518252602082019150602081019050602083039250610a03565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090508091505090565b610a7381610190565b15610ae6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f414c52454144595f474f5645524e4f520000000000000000000000000000000081525060200191505060405180910390fd5b6000610af06109b7565b905060018160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcfb473e6c03f9a29ddaf990e736fa3de5188a0bd85d684f5b6e164ebfbfff5d282604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea26469706673582212206d14f6f475ef7ecdf1263c3898c448f5120c03155c8563d10738ef93f7552ed864736f6c634300060c0033";

type StarknetGovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StarknetGovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StarknetGovernance__factory extends ContractFactory {
  constructor(...args: StarknetGovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StarknetGovernance> {
    return super.deploy(overrides || {}) as Promise<StarknetGovernance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StarknetGovernance {
    return super.attach(address) as StarknetGovernance;
  }
  override connect(signer: Signer): StarknetGovernance__factory {
    return super.connect(signer) as StarknetGovernance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StarknetGovernanceInterface {
    return new utils.Interface(_abi) as StarknetGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StarknetGovernance {
    return new Contract(address, _abi, signerOrProvider) as StarknetGovernance;
  }
}
